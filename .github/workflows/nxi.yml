name: nxi_build

on:
  push:
    branches: [ master, dev, test ]

jobs:
  nxi:
    strategy:
      matrix:
        config:
          - { name: "windows", os: windows-latest, qt_release: "release_windows-latest.zip" }
          - { name: "ubuntu", os: ubuntu-latest, qt_release: "release_ubuntu-latest.tar.gz" }
          - { name: "macos", os: macos-latest, qt_release: "release_macos-latest.tar.gz" }
    #
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev

      - uses: egor-tensin/setup-gcc@v1
        if: matrix.config.os == 'ubuntu-latest'

      - uses: suisei-cn/actions-download-file@v1
        with:
          url: "https://github.com/neuroshok/fork.qt/releases/download/latest/${{ matrix.config.qt_release }}"
          target: .

      - run: sudo apt-get install libx11-xcb-dev libglu1-mesa-dev
        if: matrix.config.os == 'ubuntu-latest'

      - run: tar -xvzf ${{ matrix.config.qt_release }}

      - run: xmake config --qt=release -y
      - run: xmake  -y
      - run: xmake install -v -o nxi nxi

      # macos install
      - run: cd build && ls
      - run: cp -R build/macosx/x86_64/release nxi
        if: matrix.config.os == 'macos-latest'

      - run: cd nxi && echo "" > ${{ github.sha }}

      - run: zip -r nxi-${{ matrix.config.name }}-${{ github.ref_name }}.zip nxi
        if: matrix.config.os != 'windows-latest'

      - run: Compress-Archive -Path nxi -DestinationPath nxi-${{ matrix.config.name }}-${{ github.ref_name }}.zip
        if: matrix.config.os == 'windows-latest'

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: nxi-${{ matrix.config.name }}-${{ github.ref_name }}.zip
          tag: latest
          overwrite: true